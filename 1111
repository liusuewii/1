
  slli a2, a2, 3    # a2 = high
  slli a3, a3, 3    # a3 = low
  
  bge a3, a2, else1 # low >= high
  addi sp, sp, -8   # partition(low,high)
  sd ra,0(sp)
  jal partition      
  ld ra,0(sp)
  addi sp, sp, 8
  
  srli a2, a2, 3    # a2 = high
  srli a3, a3, 3    # a3 = low

  addi sp, sp, -16   # qsort(low,pivot-1)
  sd ra, 0(sp)
  sd a2, 8(sp)
  addi a2, a6, -1
  jal quickSort
  ld a2 ,8(sp)     
  ld ra ,0(sp)
  addi sp, sp, 16

  addi sp, sp, -16   # qsort(pivot+1,high)
  sd ra, 0(sp)
  sd a3, 8(sp)
  addi a3, a6, 1
  jal quickSort
  ld a3 ,8(sp)     
  ld ra ,0(sp)
  addi sp, sp, 16

else1:
  ret

.global partition
partition:
  add a0, a0, a2    # s3 = pivot = arr[high]
  ld s3, 0(a0)      
  sub a0, a0, a2

  addi a4, a3, 0    # a4 = i 
  addi a5, a3, 0    # a5 = j 
  
loop:
  bge a5, a2, exit  # j >= high
  add a0, a0, a5    # s4 = arr[j]
  ld s4, 0(a0)      
  sub a0, a0, a5
  
  bge s4, s3, else2 # arr[j] >= pivot   
  addi sp, sp, -8   # swag arr[i] arr[j]
  sd ra,0(sp)
  jal swag      
  ld ra,0(sp)
  addi sp, sp, 8

  addi a4, a4, 8    # i++
else2:
  addi a5, a5, 8    # j++
  j    loop

exit:
  addi a5, a2, 0    # j = high
  addi sp, sp, -8  # swag arr[i] arr[high]
  sd ra, 0(sp)
  jal swag  
  ld ra, 0(sp)
  addi sp, sp, 8
  addi a6, a4, 0   # return i 
  srli a6, a6, 3
  jalr x0, 0(x1)

.global swag
swag:
  add s5, a0, a4
  add s6, a0, a5
  ld s7, 0(s5)
  ld s8, 0(s6)   
  sd s7, 0(s6)
  sd s8, 0(s5)
  jalr x0, 0(x1)
